# name: Name of the program or language. Used to identify which process to spawn (e.g. 'ls').
#       Does not need to match the command of the process. Only needs to be unique.
#
# cmd: Command of the process to spawn (e.g. 'ls').
#
# draw: Whether the client is expected to handle the output of the spawned process.
#       If false, the client should cease output to the terminal for the duration of the process.
#       default: true
#
# file: File extension of the language (e.g. 'c', 'cpp', 'rs').

sandbox: firejail --quiet --hostname=demonic --private --private-tmp --chroot=/srv/chroot --env=PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games --env=LC_ALL=en_US.UTF-8 sh -c

root: /srv/chroot

# programs
progs:
  palindrome: {}

  prime: {}

  withfeathers:
    cmd: python /srv/withfeathers.py

  cmatrix: {}
  cowsay: {}
  fortune: {}
  lolcat: {}
  pipes.sh: {}
  hollywood: {}

  cat: {}
  cd: {}
  echo: {}
  less: {}
  ls: {}
  man: {}
  mv: {}
  pwd: {}
  rm: {}
  which: {}

  vim:
    draw: false

  bash:
    draw: false

# languages
langs:
  c:
    ext: c
    cmd:
      - gcc -o <path> <path>.c
      - <path>

  c++:
    ext: cpp
    cmd:
      - g++ -o <path> <path>.cpp
      - <path>

  go:
    ext: go
    cmd: go run <path>.go

  haskell:
    ext: hs
    cmd: ghci <path>.hs

  java:
    ext: java
    cmd:
      - CLASS=$(grep "class" <path>.java | cut -d " " -f 3)
      - NEW_PATH=<path>-java
      - mkdir -p $NEW_PATH
      - mv <path>.java $NEW_PATH/$CLASS.java
      - cd $NEW_PATH
      - javac $CLASS.java
      - java $CLASS

  javascript:
    ext: js
    cmd: node <path>.js

  python:
    ext: py
    cmd: python <path>.py

  scheme:
    ext: rkt
    cmd: racket <path>.rkt

  ruby:
    ext: rb
    cmd: ruby <path>.rb

  rust:
    ext: rs
    cmd:
      - rustc -o <path> <path>.rs
      - <path>

  shell:
    ext: sh
    cmd: sh <path>.sh

